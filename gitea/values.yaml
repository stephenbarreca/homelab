# Default values for gitea.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

clusterDomain: cluster.local

image:
  repository: gitea/gitea
  tag: 1.13.2
  pullPolicy: Always

imagePullSecrets: []

securityContext: {}

service:
  http:
    type: LoadBalancer
    port: 3000
    # clusterIP: None
    loadBalancerIP: "192.168.1.210"
    #nodePort:
    annotations:
      metallb.universe.tf/allow-shared-ip: gitea-svc
      co.elastic.monitor/type: http
      co.elastic.monitor/urls: "http://192.168.1.210:3000/"
      co.elastic.monitor/schedule: "@every 10s"
      co.elastic.monitor/name: "Gitea Service HTTP"
  ssh:
    type: LoadBalancer
    port: 22
    #clusterIP: None
    loadBalancerIP: "192.168.1.210"
    #nodePort:
    #externalIPs:
    loadBalancerSourceRanges: []
    annotations:
      metallb.universe.tf/allow-shared-ip: gitea-svc
      co.elastic.monitor/type: tcp
      co.elastic.monitor/hosts: "192.168.1.210:22"
      co.elastic.monitor/schedule: "@every 10s"
      co.elastic.monitor/name: "Gitea Service SSH"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - git.example.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - git.example.com

resources:
  requests:
    memory: 500Mi
    cpu: 100m
  limits:
    memory: 2Gi
    cpu: 500m

nodeSelector: {}

tolerations: []

affinity: {}

statefulset:
  env: []
    # - name: VARIABLE
    #   value: my-value
  terminationGracePeriodSeconds: 60
  labels: {}

persistence:
  enabled: true
  existingClaim: gitea-data
  size: 10Gi
  accessModes:
    - ReadWriteMany
  labels: {}
  annotations: {}

# additional volumes to add to the Gitea statefulset.
extraVolumes:
# - name: postgres-ssl-vol
#   secret:
#     secretName: gitea-postgres-ssl


# additional volumes to mount, both to the init container and to the main
# container. As an example, can be used to mount a client cert when connecting
# to an external Postgres server.
extraVolumeMounts:
# - name: postgres-ssl-vol
#   readOnly: true
#   mountPath: "/pg-ssl"

# bash shell script copied verbatim to the start of the init-container.
initPreScript: ""
#
# initPreScript: |
#   mkdir -p /data/git/.postgresql
#   cp /pg-ssl/* /data/git/.postgresql/
#   chown -R git:git /data/git/.postgresql/
#   chmod 400 /data/git/.postgresql/postgresql.key


gitea:
#  admin:
#    username: fishfu
#    password: "N!K)L$t3sl4123"
#    email: "fishfu@gmail.com"

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      # prometheusSelector: default

  ldap:
    enabled: false
    #name:
    #securityProtocol:
    #host:
    #port:
    #userSearchBase:
    #userFilter:
    #adminFilter:
    #emailAttribute:
    #bindDn:
    #bindPassword:
    #usernameAttribute:
    #sshPublicKeyAttribute:

  oauth:
    enabled: false
    #name:
    #provider:
    #key:
    #secret:
    #autoDiscoverUrl:
    #useCustomUrls:
    #customAuthUrl:
    #customTokenUrl:
    #customProfileUrl:
    #customEmailUrl:

  config:
    server:
      DOMAIN: git.home.local
  #  APP_NAME: "Gitea: Git with a cup of tea"
  #  RUN_MODE: dev
  #
  #  server:
  #    SSH_PORT: 22
  #
  #  security:
  #    PASSWORD_COMPLEXITY: spec

  podAnnotations: {}

  database:
    builtIn:
      postgresql:
        enabled: true
      mysql:
        enabled: false
      mariadb:
        enabled: false

  cache:
    builtIn:
      enabled: true

  livenessProbe:
    enabled: true
    initialDelaySeconds: 200
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  startupProbe:
    enabled: false
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10

  # customLivenessProbe:
  #   httpGet:
  #     path: /user/login
  #     port: http
  #   initialDelaySeconds: 60
  #   periodSeconds: 10
  #   successThreshold: 1
  #   failureThreshold: 10
  # customReadinessProbe:
  #   httpGet:
  #     path: /user/login
  #     port: http
  #   initialDelaySeconds: 5
  #   periodSeconds: 10
  #   successThreshold: 1
  #   failureThreshold: 3
  # customStartupProbe:
  #   httpGet:
  #     path: /user/login
  #     port: http
  #   initialDelaySeconds: 60
  #   periodSeconds: 10
  #   successThreshold: 1
  #   failureThreshold: 10

memcached:
  service:
    port: 11211
  resources:
    limits: 
      cpu: 400m
      memory: 512Mi
    requests:
      memory: 256Mi
      cpu: 200m

postgresql:
  global:
    postgresql:
      postgresqlDatabase: gitea
      postgresqlUsername: gitea
      postgresqlPassword: gitea
      servicePort: 5432
  persistence:
    enabled: true
    existingClaim: gitea-postgres
    size: 10Gi
  resources: 
    limits: 
      memory: 256Mi
      cpu: 250m
    requests:
      memory: 256Mi
      cpu: 250m
#mysql:
#  root:
#    password: gitea
#  db:
#    user: gitea
#    password: gitea
#    name: gitea
#  service:
#    port: 3306
#  persistence:
#    size: 10Gi
#
#mariadb:
#  auth:
#    database: gitea
#    username: gitea
#    password: gitea
#    rootPassword: gitea
#  primary:
#    service:
#      port: 3306
#    persistence:
#      size: 10Gi


