# Default values for pihole.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: "pihole/pihole"
  tag: latest
  pullPolicy: Always

serviceTCP:
  type: LoadBalancer
  # externalTrafficPolicy: Local
  loadBalancerIP: "192.168.1.240"
    # a fixed LoadBalancer IP
  annotations: 
    # metallb.universe.tf/address-pool: network-services
    metallb.universe.tf/allow-shared-ip: pihole-svc
  externalTrafficPolicy: Local

serviceUDP:
  type: LoadBalancer
  # externalTrafficPolicy: Local
  loadBalancerIP: "192.168.1.240"
    # a fixed LoadBalancer IP
  annotations: 
    # metallb.universe.tf/address-pool: network-services
    metallb.universe.tf/allow-shared-ip: pihole-svc
  externalTrafficPolicy: Local

virtualHost: pi.hole

ingress:
  enabled: false

# Probes configuration
probes:
  # probes.liveness -- Configure the healthcheck for the ingress controller
  liveness:
    enabled: true
    initialDelaySeconds: 60
    failureThreshold: 10
    timeoutSeconds: 5
  readiness:
    enabled: true
    initialDelaySeconds: 60
    failureThreshold: 3
    timeoutSeconds: 5

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
   cpu: 300m
   memory: 128Mi
  requests:
   cpu: 30m
   memory: 128Mi

persistentVolumeClaim:
  # set to true to use pvc
  enabled: false
  # set to true to use you own pvc
  existingClaim: pihole-data
  # annotations: {}

  accessModes:
    - ReadWriteMany
  size: 1Gi
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: security
            operator: In
            values:
            - S2
        topologyKey: "kubernetes.io/hostname"

# Administrator password when not using an existing secret (see below)
adminPassword: "7!Dn2#rxN%JUnQ"

# Use an existing secret for the admin password.
#admin:
#  existingSecret: "pihole-secret"
#  passwordKey: "password"

# extraEnvironmentVars is a list of extra enviroment variables to set for pihole to use
extraEnvVars: 
  TZ: "America/New_York"

# default upstream DNS servers to use
# DNS1: "192.168.1.250"
# DNS2: "192.168.1.250"

doh:
  # set to true to enabled DNS over HTTPs via cloudflared
  enabled: false
  name: "cloudflared"
  repository: "crazymax/cloudflared"
  tag: latest
  pullPolicy: IfNotPresent

dnsmasq:
  upstreamServers: []
  # Here you can add upstream dns servers with. All lines will be added to the
  # pihole dnsmasq configuration.
  # The format should be like:
  # - server=/foo.bar/192.168.178.10
  # - server=/bar.foo/192.168.178.11

  customDnsEntries:
  # Here you can add custom dns entries to override the
  # dns resolution with. All lines will be added to the
  # pihole dnsmasq configuration.
  # The format should be like:
  # - address=/foo.bar/192.168.178.10
  # - address=/pi.hole/192.168.1.240
  - address=/plex.home.local/192.168.1.241
  - address=/grafana.home.local/192.168.1.205
  - address=/jackett.home.local/192.168.1.201
  - address=/radarr.home.local/192.168.1.203
  - address=/sonarr.home.local/192.168.1.202
  - address=/tautulli.home.local/192.168.1.243
  - address=/transmission.home.local/192.168.1.200
  - address=/prometheus.home.local/192.168.1.206
  - address=/git.home.local/192.168.1.210
  - address=/magic-mirror.home.local/192.168.1.211
  additionalHostsEntries:
  # Dnsmasq reads the /etc/hosts file to resolve ips. You can add additional entries if you like
  - 192.168.1.3     redhead
  - 192.168.1.4     snowhite


adlists: {}
  # If you want to provide blocklists, add them here.
  # - https://hosts-file.net/grm.txt
  # - https://reddestdream.github.io/Projects/MinimalHosts/etc/MinimalHostsBlocker/minimalhosts

whitelist:
  # If you want to provide whitelisted domains, add them here.
  - api.vsee.com

blacklist: {}
  # If you want to have special domains blacklisted, add them here
  # - *.blackist.com

regex: {}
  # Add regular expression blacklist items
  # - (^|\.)facebook\.com$


webHttp: "80"
webHttps: "443"
hostNetwork: "false"
privileged: "false"
