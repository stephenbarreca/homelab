apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "magic-mirror.fullname" . }}
  labels:
    {{- include "magic-mirror.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "magic-mirror.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "magic-mirror.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "magic-mirror.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          - name: config
            mountPath: /opt/magic_mirror/config
          {{- if .Values.persistence.modules.enabled }}
          - name: modules
            mountPath: /opt/magic_mirror/modules
          {{- end }}
          {{- if .Values.persistence.css.enabled }}
          - name: css
            mountPath: /opt/magic_mirror/css
          {{- end }}
          {{- if .Values.localtime }}
          - name: localtime
            mountPath: /etc/localtime
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config
        {{- if .Values.config.persistentVolumeClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.config.claimName | quote}}
        {{- else }}
        configMap:
            name: magic-mirror-config
            items:
              - key: config.js
                path: config.js
        {{- end }}
      {{- if .Values.persistence.modules.enabled }}
      - name: modules
        {{- if .Values.persistence.modules.claimName }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.modules.claimName | quote}}
        {{- end }}
      {{- end }}
      {{- if .Values.persistence.css.enabled }}
      - name: css
        {{- if .Values.persistence.css.claimName }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.css.claimName | quote}}
        {{- end }}
      {{- end }}
      {{- if .Values.localtime }}
      - name: localtime
        hostPath:
          path: "/etc/localtime"
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
