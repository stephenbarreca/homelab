# Global Docker image parameters
# Please, note that this will override the image parameters, including dependencies, configured to use the global value
# Current available global Docker image parameters: imageRegistry
#
# global:
#   imageRegistry: myRegistryName

# String to partially override qbittorrent.fullname template (will maintain the release name)
#
# nameOverride:

# String to fully override qbittorrent.fullname template
#
# fullnameOverride:

# ref: https://hub.docker.com/r/tranchung/qbittorrentvpn/tags
#
image:
  registry: docker.io
  repository: tranchung/qbittorrent
  tag: v1.0.0
  # Specify a imagePullPolicy
  # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  # ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  #
  pullPolicy: IfNotPresent

# ref: https://github.com/trankchung/qbittorrent/tree/master/docker#environment-variables
vpn:
  # For VPN_ENABLED environment variable
  enabled: true
  # For VPN_USERNAME environment variable
  username: "fishfu@gmail.com"
  # For VPN_PASSWORD environment variable
  password: "N!K)L$t3l4123"
  
  # VPN provider. Currently only supports Private Internet Access (pia)
  provider: nordvpn

  # LAN subnet that includes all worker nodes' podCIDR. Leave as default would work in most cases.
  # # LAN_NETWORK environment variable
  lanNetwork: "192.168.1.0/24"

# Port qBittorrent UI listens on
# ref: https://github.com/trankchung/qbittorrent/tree/master/docker#environment-variables
# For WEBUI_PORT_ENV environment variable
uiPort: 80

# Kubernetes configuration
# For minikube, set this to NodePort, elsewhere use LoadBalancer
#
service:
  # ClusterIP, LoadBalancer, or NodePort
  type: LoadBalancer
  # HTTP Port
  port: 80
  listenPort: 51324
  loadBalancerIP: 192.168.1.215
  #
  # nodePort: <to set explicitly, choose port between 30000-32767>
  nodePort: ""
  #
  # Enable client source IP preservation
  # ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  #
  externalTrafficPolicy: Local
  # Service annotations done as key:value pairs
  annotations: {}

# Enable persistence using Persistent Volume Claims
# ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
#
persistence:
  # Stores qBittorrent settings
  data:
    enabled: true
    accessMode: ReadWriteOnce
    size: 1Gi
    # storageClass: ""
    persistentVolumeClaim: qbittorrent-config
    
  # Stores the downloaded torrents
  downloads:
    enabled: true
    accessMode: ReadWriteOnce
    size: 50Gi
    # storageClass: ""
    persistentVolumeClaim: qbittorrent-downloads

# Extra environtment variables to append to deployment
# ref: https://github.com/trankchung/qbittorrent/tree/master/docker#environment-variables
extraEnvVars:
  PUID: "1000"
  PGID: "1000"

# Pod Upgrade Strategy
# ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
#
strategy: {}

# Pod Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
#
securityContext: {}

# Configure resource requests and limits
# ref: http://kubernetes.io/docs/user-guide/compute-resources/
#
resources: {}

# Node selector for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
#
nodeSelector: {}

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
#
affinity: {}


