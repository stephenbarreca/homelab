apiVersion: {{ template "qbittorrent.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "qbittorrent.fullname" . }}
  labels:
    {{- include "qbittorrent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "qbittorrent.selectorLabels" . | nindent 6 }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "qbittorrent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      containers:
      - name: {{ template "qbittorrent.fullname" . }}
        image: {{ template "qbittorrent.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        securityContext: 
          capabilities:
            add:
            - NET_ADMIN
        env:
        - name: VPN_ENABLED
        {{- if .Values.vpn.enabled }}
          value: "yes"
        {{- else }}
          value: "no"
        {{- end }}
        - name: VPN_USERNAME
          value: {{ .Values.vpn.username | quote }}
        - name: VPN_PASSWORD
          value: {{ .Values.vpn.password | quote }}
        - name: LAN_NETWORK
          value: {{ default "10.0.0.0/8" .Values.vpn.lanNetwork | quote }}
        {{- range $key, $value := .Values.extraEnvVars }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.uiPort }}
          name: http
          protocol: TCP
        - containerPort: 8999
          name: transport-tcp
          protocol: TCP
        - containerPort: 8999
          name: transport-udp
          protocol: UDP
        volumeMounts:
        - name: qb-data
          mountPath: /config/qBittorrent
        - name: qb-downloads
          mountPath: /downloads
        - name: vpn-config
          mountPath: /config
        - name: "dev-tun"
          mountPath: "/dev/net/tun" # Needed for VPN
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 30
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      dnsPolicy: None
      dnsConfig:
        nameservers:
        - 8.8.8.8
        - 8.8.4.4
      volumes:
      - name: qb-data
      {{- if .Values.persistence.data.enabled }}
        persistentVolumeClaim:
          {{- if .Values.persistence.data.persistentVolumeClaim }}
          claimName: {{ .Values.persistence.data.persistentVolumeClaim }}
          {{- else }}
          claimName: {{ template "qbittorrent.fullname" . }}-data
          {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: qb-downloads
      {{- if .Values.persistence.downloads.enabled }}
        persistentVolumeClaim:
          {{- if .Values.persistence.downloads.persistentVolumeClaim }}
          claimName: {{ .Values.persistence.downloads.persistentVolumeClaim }}
          {{- else }}
          claimName: {{ template "qbittorrent.fullname" . }}-downloads
          {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: vpn-config
        configMap:
          name: {{ template "qbittorrent.fullname" . }}-vpn-config
      - name: "dev-tun"
        hostPath:
          path: "/dev/net/tun"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
