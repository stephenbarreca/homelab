# ref: https://hub.docker.com/r/itzg/minecraft-server/
image:
  repository: itzg/minecraft-server
  tag: java17
  pullPolicy: Always

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 9Gi
    cpu: 0.2
  limits:
    memory: 11Gi
    cpu: 4

# upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

nodeSelector: {}

tolerations: []

affinity: {}

securityContext:
  # Security context settings
  runAsUser: 1000
  fsGroup: 2000
# Most of these map to environment variables. See Minecraft for details:
# https://hub.docker.com/r/itzg/minecraft-server/
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 5
  failureThreshold: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 5
  failureThreshold: 10
  successThreshold: 1
  timeoutSeconds: 1
minecraftServer:
  # This must be overridden, since we can't accept this for the user.
  eula: "TRUE"
  # One of: LATEST, SNAPSHOT, or a specific version (ie: "1.7.9").
  version: "LATEST"
  # This can be one of "VANILLA", "FORGE", "SPIGOT", "BUKKIT", "PAPER", "FTBA", "SPONGEVANILLA"
  type: "VANILLA"
  # One of: peaceful, easy, normal, and hard
  difficulty: peaceful
  # A comma-separated list of player names to whitelist.
  whitelist:
  # A comma-separated list of player names who should be admins.
  ops: fishfu
  # A server icon URL for server listings. Auto-scaled and transcoded.
  icon:
  # Max connected players.
  maxPlayers: 5
  # This sets the maximum possible size in blocks, expressed as a radius, that the world border can obtain.
  maxWorldSize: 10000
  # Allows players to travel to the Nether.
  allowNether: true
  # Allows server to announce when a player gets an achievement.
  announcePlayerAchievements: false
  # Enables command blocks.
  enableCommandBlock: true
  # If true, players will always join in the default gameMode even if they were previously set to something else.
  forcegameMode: true
  # Defines whether structures (such as villages) will be generated.
  generateStructures: true
  # If set to true, players will be set to spectator mode if they die.
  hardcore: false
  # The maximum height in which building is allowed.
  maxBuildHeight: 256
  # The maximum number of milliseconds a single tick may take before the server watchdog stops the server with the message. -1 disables this entirely.
  maxTickTime: 60000
  # Determines if animals will be able to spawn.
  spawnAnimals: true
  # Determines if monsters will be spawned.
  spawnMonsters: true
  # Determines if villagers will be spawned.
  spawnNPCs: true
  # Max view distance (in chunks).
  viewDistance: 32
  # Define this if you want a specific map generation seed.
  levelSeed:
  # One of: creative, survival, adventure, spectator
  gameMode: creative
  # Message of the Day
  motd: "Welcome to Autumn's Minecraft World!"
  # If true, enable player-vs-player damage.
  pvp: false
  # One of: DEFAULT, FLAT, LARGEBIOMES, AMPLIFIED, CUSTOMIZED
  levelType: DEFAULT
  # When levelType == FLAT or CUSTOMIZED, this can be used to further customize map generation.
  # ref: https://hub.docker.com/r/itzg/minecraft-server/
  generatorSettings:
  worldSaveName: autumn-land
  # If set, this URL will be downloaded at startup and used as a starting point
  downloadWorldUrl:
  # force re-download of server file
  forceReDownload: false
  # Check accounts against Minecraft account service.
  onlineMode: true
  # If you adjust this, you may need to adjust resources.requests above to match.
  memory: 9G
  # General JVM options to be passed to the Minecraft server invocation
  jvmOpts: ""
  # Options like -X that need to proceed general JVM options
  jvmXXOpts: "-XX:+UseG1GC -XX:ParallelGCThreads=1 -XX:ActiveProcessorCount=4"
  serviceAnnotations: {}
  serviceType: LoadBalancer
  servicePort: 25565
  ## Set the port used if the serviceType is NodePort
  # nodePort:
  loadBalancerIP: 192.168.1.220
  # loadBalancerSourceRanges: []
  ## Set the externalTrafficPolicy in the Service to either Cluster or Local
  externalTrafficPolicy: Local
  externalIPs:

  rcon:
    # If you enable this, make SURE to change your password below.
    enabled: true
    port: 25575
    password: "N!K)L$t3sl4123"
    serviceType: LoadBalancer
    loadBalancerIP: 192.168.1.221
    # loadBalancerSourceRanges: []
    ## Set the externalTrafficPolicy in the Service to either Cluster or Local
    externalTrafficPolicy: Local

  extraPorts:
    # These options allow you to expose another port from the Minecraft server, plugins such
    # as dynmap (8123) and bluemap (8100) will require this for access to their web interfaces
    #
    # - name: map
    #   containerPort: 8123
    #   protocol: TCP
    #   service:
    #     enabled: false
    #     embedded: false
    #     annotations: {}
    #     type: ClusterIP
    #     loadBalancerIP: ""
    #     loadBalancerSourceRanges: []
    #     externalTrafficPolicy: Cluster
    #     port: 8123
    #   ingress:
    #     enabled: false
    #     annotations:
    #       kubernetes.io/ingress.class: nginx
    #       kubernetes.io/tls-acme: "true"
    #     hosts:
    #       - name: map.local
    #         path: /
    #     tls:
    #       - secretName: map-tls
    #         hosts:
    #           - map.local

  query:
    # If you enable this, your server will be "published" to Gamespy
    enabled: false
    port: 25565

## Additional minecraft container environment variables
##
extraEnv: {}

persistence:
  ## minecraft data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  dataDir:
    # Set this to false if you don't care to persist state between restarts.
    enabled: true
    existingClaim: minecraft-autumn-land
    Size: 1Gi

podAnnotations: {}

deploymentAnnotations: {}

